import { GetStaticProps, NextPage } from "next";
import { createProxySSGHelpers } from "@trpc/react/ssg";
import Head from "next/head";
import { trpc } from "../utils/trpc";
import { appRouter } from "../server/trpc/router";
import superjson from "superjson";
import { createContext } from "../server/trpc/context";
import { Title } from "@/components/title";
import { BlogLink } from "@/components/blog-link";
import dayjs from "dayjs";

export const getStaticProps: GetStaticProps = async () => {
  const ssg = createProxySSGHelpers({
    router: appRouter,
    ctx: await createContext(),
    transformer: superjson,
  });

  await ssg.post.all.fetch();

  return {
    props: {
      trpcState: ssg.dehydrate(),
    },
    revalidate: 60,
  };
};

const Home: NextPage = () => {
  const allPosts = trpc.post.all.useQuery();

  return (
    <>
      <Head>
        <title>Ed Allonby</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className="container mx-auto flex min-h-screen flex-col items-center justify-center p-4">
        <Title />
        <ul className="flex flex-col gap-4">
          {allPosts.data?.map((blogPost) => (
            <li key={blogPost.slug}>
              <BlogLink
                slug={blogPost.slug}
                title={blogPost.title}
                publishDate={dayjs(blogPost.date)}
              />
            </li>
          ))}
        </ul>
      </main>
    </>
  );
};

export default Home;
